#!/usr/bin/env python3

import os
import sys
import subprocess
import requests
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
from bs4 import BeautifulSoup
import time
from urllib.parse import urlparse
import mimetypes

def get_executable_path(executable_name):
    """指定された実行ファイルのパスを which コマンドで取得する"""
    try:
        result = subprocess.run(['which', executable_name], capture_output=True, text=True, check=True)
        path = result.stdout.strip()
        return path
    except subprocess.CalledProcessError:
        print(f"警告: {executable_name} が見つかりませんでした。")
        return None

def get_file_extension(url):
    """ URL から拡張子を取得する (なければ Content-Type をチェック) """
    parsed_url = urlparse(url)
    ext = os.path.splitext(parsed_url.path)[1]  # ".jpg" ".png" など
    
    if ext:  # 拡張子が取得できたらそれを使う
        return ext

    # 拡張子がない場合は Content-Type から推測
    try:
        response = requests.head(url, allow_redirects=True)
        content_type = response.headers.get("Content-Type", "")
        ext = mimetypes.guess_extension(content_type)
        return ext if ext else ".jpg"  # 不明なら jpg にする
    except:
        return ".jpg"

def download_images(url, download_folder=None):

    if download_folder is None:
        download_folder = "images"

    # Webページの読み込み
    driver.get(url)
    time.sleep(5)  # ページの読み込みを待機

    # BeautifulSoupでページを解析
    soup = BeautifulSoup(driver.page_source, 'html.parser')

    # 画像のURLを取得
    img_tags = soup.find_all('img')
    img_urls = [img['src'] for img in img_tags if img.get('src')]

    # ダウンロードフォルダの作成
    os.makedirs(download_folder, exist_ok=True)

    # 画像をダウンロード
    for i, img_url in enumerate(img_urls):
        try:
            # 相対URLを絶対URLに変換
            if not img_url.startswith('http'):
                img_url = url + img_url if url.endswith('/') else url + '/' + img_url

            # 拡張子を取得
            ext = get_file_extension(img_url)

            # 保存ファイル名
            file_name = os.path.join(download_folder, f"image_{i+1:03d}{ext}")

            # 画像をダウンロード
            img_data = requests.get(img_url).content
            with open(file_name, 'wb') as f:
                f.write(img_data)

            print(f"Downloaded: {file_name}")

        except Exception as e:
            print(f"Error downloading {img_url}: {e}")

    driver.quit()

if __name__ == "__main__":
    if len(sys.argv) < 2:
        print("Usage: webpicget <url> [download_folder]")
        sys.exit(1)

    url = sys.argv[1]
    download_folder = sys.argv[2] if len(sys.argv) > 2 else None

    # Chromium と ChromeDriver のパスを動的に取得
    chromium_path = get_executable_path("chromium")
    chromedriver_path = get_executable_path("chromedriver")

    # WebDriverの初期化 (Chromiumを使用)
    service = Service(executable_path=chromedriver_path)
    options = Options()
    options.binary_location = chromium_path
    options.add_argument('--headless')  # ヘッドレスモードで実行する場合
    driver = webdriver.Chrome(service=service, options=options)

    download_images(url, download_folder)
